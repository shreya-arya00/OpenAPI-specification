openapi: 3.0.0
info:
  title: E-Commerce API
  version: 1.0.0
  description: API for an e-commerce platform

paths:
  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User registered successfully

  /users/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: User logged in successfully

  /users/reset-password:
    post:
      summary: Reset user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
      responses:
        '200':
          description: Password reset email sent

  /users/{id}:
    put:
      summary: Update user profile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
      responses:
        '200':
          description: User profile updated

  /products:
    get:
      summary: Browse all products or services
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          schema:
            type: string
            description: Sort by field (e.g., price, name)
      responses:
        '200':
          description: A list of products or services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/search:
    get:
      summary: Search products or services
      parameters:
        - name: keyword
          in: query
          required: false
          schema:
            type: string
        - name: category
          in: query
          required: false
          schema:
            type: string
        - name: sort
          in: query
          required: false
          schema:
            type: string
            description: Sort by field (e.g., price, name)
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      summary: View product or service details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product or service details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /cart:
    post:
      summary: Add item to cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      responses:
        '201':
          description: Item added to cart

    get:
      summary: View and manage cart
      responses:
        '200':
          description: Current cart items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItem'

  /cart/{id}:
    put:
      summary: Update cart item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemUpdate'
      responses:
        '200':
          description: Cart item updated

    delete:
      summary: Remove cart item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cart item removed

  /checkout:
    post:
      summary: Proceed to checkout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Checkout'
      responses:
        '200':
          description: Checkout successful

  /payment:
    post:
      summary: Make a payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '200':
          description: Payment successful

  /orders/{id}/status:
    get:
      summary: Track order status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'

  /products/{id}/reviews:
    post:
      summary: Leave a review and rating
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '201':
          description: Review submitted

  /support/contact:
    post:
      summary: Contact support
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportRequest'
      responses:
        '200':
          description: Support request submitted

components:
  schemas:
    UserRegistration:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string

    UserLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    PasswordReset:
      type: object
      properties:
        email:
          type: string

    UserProfileUpdate:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string

    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string

    CartItem:
      type: object
      properties:
        productId:
          type: string
        quantity:
          type: integer

    CartItemUpdate:
      type: object
      properties:
        quantity:
          type: integer

    Checkout:
      type: object
      properties:
        cartId:
          type: string
        paymentMethod:
          type: string

    Payment:
      type: object
      properties:
        orderId:
          type: string
        amount:
          type: number
        paymentMethod:
          type: string

    OrderStatus:
      type: object
      properties:
        orderId:
          type: string
        status:
          type: string

    Review:
      type: object
      properties:
        rating:
          type: integer
        comment:
          type: string

    SupportRequest:
      type: object
      properties:
        userId:
          type: string
        message:
          type: string
